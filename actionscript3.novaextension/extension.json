{
	"identifier": "com.abattoirsoftware.actionscript3",
	"name": "ActionScript 3",
	"organization": "",
	"description": "ActionScript & MXML language extension for Panic Nova. LSP powered directly from Bowler Hat LLC's vscode-as3mxml. Develop apps for Adobe AIR, Adobe Flash Player, or Apache Royale.",
	"version": "0.7.3",
	"keywords": ["actionscript 3","flash","air","adobe air","mxml" ],
	"categories": [
		"issues",
		"languages",
		"tasks",
		"clips",
		"completions"
	],

	"main": "main.js",

	"entitlements": {
		"process": true,
		"filesystem": "readwrite"
	},

	"activationEvents": [
		"onLanguage:as",
		"onLanguage:as3",
		"onLanguage:actionscript",
		"onLanguage:actionscript3",
		"onLanguage:mxml",
		"onWorkspaceContains:**/asconfig.json",
		"onWorkspaceContains:**/asconfig.*.json",
		"onWorkspaceContains:.actionScriptProperties",
		"onWorkspaceContains:*.as3proj",
		"onView:actionScriptSourcePaths",
		"onCommand:as3mxml.organizeImportsInUri",
		"onCommand:as3mxml.organizeImportsInDirectory",
		"onCommand:as3mxml.removeUnusedImportsInUri",
		"onCommand:as3mxml.addMissingImportsInUri",
		"onCommand:as3mxml.sortImportsInUri",
		"onCommand:as3mxml.saveSessionPassword",
		"onCommand:as3mxml.selectWorkspaceSDK",
		"onCommand:as3mxml.getActiveProjectURIs",

		"onCommand:as3.packaging.certificateCreate"
	],

	"breakpoints": [
		{ "syntax": "as" },
		{ "syntax": "mxml" }
	],

	"debugAdapters": {
		"actionscript": {
			"name": "SWF",
			"image": "ActionScript_icon.png"
		}
	},

	"taskTemplates": {
		"actionscript-flash": {
			"name": "Flash",
			"image": "Adobe_Flash_Player_SVG.svg.png",
			"description": "Build and run a Flash or Flex project.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				}
			},
			"config": "Tasks/as3-flash.json"
		},
		"actionscript-air": {
			"name": "AIR",
			"image": "Adobe_AIR_logo.svg.png",
			"description": "Build and run AS3 or MXML project with AIR for desktops.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "actionscript" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "actionscript" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "actionscript" }
				}
			},
			"config": "Tasks/as3-air.json"
		},
		"actionscript-android": {
			"name": "AIR - Android",
			"image": "Android-Adobe_AIR_logo.svg.png",
			"description": "Build and run AS3 or MXML project with AIR for Android devices.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "android" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "android" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "android" }
				}			},
			"config": "Tasks/as3-android.json"
		},
		"actionscript-ios": {
			"name": "AIR - iOS",
			"image": "iOS-Adobe_AIR_logo.svg.png",
			"description": "Build and run AS3 or MXML project with AIR for iOS devices.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "ios" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "ios" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "mobile", "os": "ios" }
				}
			},
			"config": "Tasks/as3-ios.json"
		},
		"actionscript-airmobile": {
			"COMMENT": "Probably not needed now since we're using separate iOS and Android files.",
			"deprecated": "Please select either the \"AS3 - iOS\" or \"AS3 - Android\" task!",
			"name": "AIR - Mobile",
			"image": "Adobe Device Central.png",
			"description": "Build and run AS3 or MXML project with AIR for mobile.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "mobile" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "mobile" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "mobile" }
				}
			},
			"config": "Tasks/as3-mobile.json"
		}
	},

	"config": [
		{
			"title": "Java",
			"type": "section",
			"children": [
				{
					"key": "as3.java.path",
					"title": "Java Path",
					"type": "path",
					"placeholder": "/usr/bin/java",
					"description": "This setting may be used to specify the exact path to the java executable that the extension should use (Note: it must be an executable, and not directory)."
				}
			]
		},
		{
			"title": "SDKs",
			"type": "section",
			"children": [
				{
					"key": "as3.sdk.default",
					"title": "Default AIR SDK path",
					"allowFolders": true,
					"allowFiles": false,
					"type": "path",
					"default": "~/Applications/AIRSDK/"
				},
				{
					"key": "as3.sdk.searchPaths",
					"title": "SDK Search Paths",
					"allowFolders": true,
					"allowFiles": false,
					"type": "pathArray",
					"placeholder": "",
					"description": "(TODO) Specifies a folder path containing one or more SDKs to add as custom options in the SDK picker."

				},
				{
					"key": "as3.sdk.animate",
					"title": "Adobe Animate executable",
					"type": "path",
					"placeholder": "",
					"description": "Specifies the absolute path of the Adobe Animate executable"
				},
				{
					"key": "as3.sdk.editor",
					"title": "Editor SDK path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"default": "~/Applications/AIRSDK/",
					"description": "(Advanced) Specifies the folder path of the Apache Royale SDK used internally by the extension to provide code intelligence features. Unless you know what you're doing, you should probably set `as3.sdk.framework` instead.\n\nIf you are working on a project that uses a nightly build of Apache Royale, you may be required to specify the `as3.sdk.editor` setting to avoid compiler errors. Sometimes, new versions of Royale add new compiler options that older versions of compiler may not recognize."
				},
				{
					"key": "as3.sdk.ios",
					"title": "iOS SDK path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"placeholder": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS##.#.sdk",
					"description": "For some ANEs in iOS, you will need to specify the iOS SDK to compile them. You can run from terminal `xcrun --sdk iphoneos --show-sdk-path` to get the paths. Or maybe someday I can make this \"resolve\" that as a drop down."
				}
			]
		},
		{
			"title": "Language Server",
			"type": "section",
			"children": [
				{
					"key": "as3.languageServer.path",
					"title": "Language Server Path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"placeholder": "Use built-in AS3MXML LSP",
					"description": "Path to the AS3MXML LSP, if blank, it will used the bundled LSP."
				},
				{
					"key": "as3.languageServer.jvmargs",
					"title": "JVM Args",
					"type": "string",
					"placeholder": "-Xms512m -Xmx1024m",
					"description": "(Advanced) Specifies extra arguments that asconfigc will pass to the Java virtual machine when launching the language server (code intelligence).\n\nThe following example customizes the Java memory heap size for the code intelligence: \"-Xms512m -Xmx1024m\""
				},
				{
					"key": "as3.languageServer.concurrentRequests",
					"title": "Concurrent Requests",
					"type": "bool",
					"default": true,
					"description": "(Advanced) Specifies if requests to the language server will be processed concurrently or in a queue. Disabling concurrency will result in slower code intelligence, but it may be more stable if code intelligence stops working."
				}
			]
		},
		{
			"title": "File Exclusions",
			"type": "section",
			"description": "For all projects, these files will not be copied to the output folder after compilations.",
			"children": [
				{
					"key": "as3.fileExclusion.extensions",
					"title": "File Extensions",
					"type": "stringArray",
					"default": [ ".java",".class",".properties",".mxml",".as",".swc",".fxg"]
				},
				{
					"key": "as3.fileExclusion.names",
					"title": "File Names",
					"type": "stringArray",
					"default": [ ".DS_Store",".git",".svn",".classpath", "flex-config.xml","air-config.xml","services-config.xml","remoting-config.xml","proxy-config.xml","messaging-config.xml","data-management-config.xml" ]
				}
			]
		},
		{
			"title": "Debug",
			"type": "section",
			"children": [
				{
					"key": "as3.debug.standalone",
					"title": "Standalone Flash Player (Debug version)",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"description": ""
				}
			]
		},
		{
			"title": "Additional Options...",
			"type": "section",
			"children": [
				{
					"key": "as3.project.importFB",
					"title": "Prompt to import Flash Builder projects",
					"type": "boolean",
					"default": true,
					"description": "When specificed, this will ask if you want to import Flash Builder projects when opening a project. If disabled, or you cancel it, you can still do this manually form the menu."
				}
			]
		}
	],

	"configWorkspace": [
		{
			"title": "Application",
			"type": "section",
			"description": "Select the main ActionScript or MXML for the project",
			"children": [
				{
					"key": "as3.application.mainApp",
					"title": "Main application",
					"type": "path",
					"allowFolders": false,
					"allowFiles": true,
					"filetype": [ "as","mxml" ]
				}
			]
		},
		{
			"title": "Build Packaging",
			"description": "Used for packaging AIR projects. Not used in Flash projects.",
			"type": "section",
			"children": [
				{
					"key": "as3.packaging.certificate",
					"title": "Certificate",
					"type": "path",
					"allowFolders": false,
					"allowFiles": true,
					"description": "Select the .p12 file to build your AIR app with",
					"note": "@TODO Need to see how to implement a UI for this...",
					"comment": [
						{
							"key": "as3.packaging.certificateCreate",
							"title": "Create",
							"type": "command"
						},
						{
							"key": "as3.clearExportPassword",
							"title": "Clear",
							"type": "command"
						}
					]
				},
				{
					"key": "as3.packaging.type",
					"title": "Export as",
					"default": "Signed AIR package",
					"type":  "enum",
					"values": [
						["Signed AIR package"],
						["Signed native installer"],
						["Signed application with captive runtime"],
						["Intermediate AIRI package that must be manually signed later"]
					]
				},
				{
					"key": "as3.packaging.timestamp",
					"title": "Timestamp",
					"type": "bool",
					"description": "If you want to timestamp the packaging of your project, enable this. By unchecking it, it is the same as specifing \"none\" below for the Timestamp URL",
					"default": true
				},
				{
					"key": "as3.packaging.timestampUrl",
					"title": "Alternate Timestamp URL",
					"description": "You can specify \"none\" or a specific URL of an RFC3161-compliant timestamp server to time-stamp the digital signature. If no URL is specified, a default time-stamp server provided by Geotrust (https://timestamp.geotrust.com/tsa) is used. When the signature of an AIR application is time-stamped, the application can still be installed after the signing certificate expires, because the timestamp verifies that the certificate was valid at the time of signing.\n\nIf ADT cannot connect to the time-stamp server, then signing is canceled and no package is produced. Specify -tsa none to disable time-stamping. However, an AIR application packaged without a timestamp ceases to be installable after the signing certificate expires.",
					"type": "string"
				},
				{
					"key": "as3.packaging.excludedFiles",
					"title": "Files to exclude when packaging",
					"type": "pathArray",
					"allowFolders": true,
					"allowFiles": true
				},
				{
					"key": "as3.packaging.anes",
					"title": "Native extensions",
					"description": "ActionScript Native Extensions (ANE) allow you to incorporate native platform capabilities into your application and use them like standard libraries",
					"type": "pathArray",
					"relative": true,
					"allowFolders": false,
					"allowFiles": true,
					"comment": "This should really show a list of the ANE Details, checkbox if it's used, checkbox if you want to package"
				}
			]
		},
		{
			"title": "Build Path",
			"type": "section",
			"description": "Set the source path and library path, as well as the output location for debug running",
			"children": [
				{
					"key": "as3.build.source.main",
					"title": "Main source folder",
					"type": "path",
					"relative": true,
					"allowFolders": true,
					"allowFiles": false,
					"default": "src",
					"description": "The location of your main file. Use \"./\" if you want it at the root, otherwise it defaults to \"src\""
				},
				{
					"key": "as3.build.output",
					"title": "Output folder",
					"type": "path",
					"relative": true,
					"allowFolders": true,
					"allowFiles": false,
					"default": "bin-debug",
					"description": "The location of where the final files get built. Use \"./\" if you want it at the root, otherwise it defaults to \"bin-debug\""
				},
				{
					"key": "as3.build.outputURL",
					"title": "Output folder URL",
					"type": "string",
					"description": "(Flash only) The location of where the final files get built. Use \"./\" if you want it at the root, otherwise it defaults to \"bin-debug\""
				},
				{
					"title": "Source Path",
					"type": "section",
					"description": "Additional source folders outside of the main source folder",
					"children": [
						{
							"key": "as3.build.source.additional",
							"title": "Additional source path",
							"type": "pathArray",
							"relative": true,
							"allowFolders": true,
							"allowFiles": false
						}
					]
				},
				{
					"title": "Library Path",
					"type": "section",
					"description": "Additonal library folders to use when building",
					"children": [
						{
							"key": "as3.build.linkage",
							"title": "Framework linkage",
							"type":  "enum",
							"values": [
								["Use default (merged into code)"],
								["Merge into code"]
							],
							"default": "Use default (merged into code)"
						},
						{
							"key": "as3.build.library.additional",
							"title": "Build path libraries",
							"type": "pathArray",
							"relative": true,
							"allowFolders": true,
							"allowFiles": true
						},
						{
							"key": "as3.build.addSWCFolder",
							"title": "Add SWC Folder...",
							"type": "command"
						},
						{
							"key": "as3.build.addSWC...",
							"title": "Add SWC",
							"type": "command"
						},
						{
							"type": "separator"
						},
						{
							"key": "as3.build.verifyRSL",
							"title": "Verify RSL digests (recommended for production)",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.removeRSL",
							"title": "Remove unused RSLs",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.localDebugRuntime",
							"title": "Use local debug runtime shared libraries when debugging",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.autoOrder",
							"title": "Automatically determine library ordering based on dependencies",
							"type": "boolean",
							"default": true
						}
					]
				},
				{
					"title": "Native Extensions",
					"type": "section",
					"description": "For AIR projects: ActionScript Native Extensions (ANE) allow you to incorporate native platform capabilities into your applications and use them like standard libraries",
					"children": [
						{
							"key": "as3.build.anes",
							"title": "Native extensions",
							"type": "pathArray",
							"relative": true,
							"allowFolders": false,
							"allowFiles": true
						},
						{
							"key": "as3.packaging.addAneButton",
							"title": "Add ANE",
							"type": "command"
						},
						{
							"key": "as3.packaging.addAneFolderButton",
							"title": "Add Folder",
							"type": "command"
						},
						{
							"key": "as3.packaging.addAneRefreshButton",
							"title": "Refresh",
							"type": "command"
						}
					]
				}
			]
		},
		{
			"title": "Compiler",
			"type": "section",
			"children": [
				{
					"title": "AIR/Flex SDK version",
					"type": "section",
					"children": [
						{
							"key": "as3.compiler.useDefault",
							"title": "Use the default SDK",
							"type": "enum",
							"values": [ "Use default SDK","Use a specific SDK"],
							"default": "Use default SDK",
							"description": "Specifies the folder path of the ActionScript SDK used by the current workspace. Supports the Adobe AIR SDK & Compiler, Apache Royale, the classic Apache Flex or Adobe Flex SDKs."
						},
						{
							"key": "as3.compiler.specificSdk",
							"title": "Use a specific SDK",
							"type": "path",
							"allowFolders": true,
							"allowFiles": false,
							"placeholder": "If empty, defaults the one specified in the extention's preferences"
						}
					]
				},
				{
					"title": "Adobe Flash Player options",
					"description": "Settings for Flash only projects. These are ignored for AIR projects.",
					"type": "section",
					"children": [
						{
							"key": "as3.flash.options",
							"title": "Use the default SDK",
							"type": "enum",
							"values": [ "Use minimum version required by the Flex SDK","Use the specified version below"],
							"default": "Use minimum version required by the Flex SDK",
							"description": "Specifies the minimum version of Adobe Flash Player. If using a specified version, please use the numbers below."
						},
						{
							"key": "as3.flash.minimum.major",
							"title": "Major",
							"type": "number",
							"default": 11,
							"min": 0,
							"max": 100
						},
						{
							"key": "as3.flash.minimum.minor",
							"title": "Minor",
							"type": "number",
							"default": 1,
							"min": 1,
							"max": 100
						},
						{
							"key": "as3.flash.minimum.revision",
							"title": "Revision",
							"type": "number",
							"default": 0,
							"min": 0,
							"max": 100
						}
					]
				},
				{
					"title": "HTML wrapper",
					"type": "section",
					"children": [
						{
							"key": "as3.flash.generatorType",
							"title": "Which type of HTML to generate",
							"type": "enum",
							"values": [ "Classic","Ruffle"],
							"default": "Classic",
							"description": "Specifies which type of wrapper to generate for the project. Classic will use the default in the SDK. Ruffle will supply a version that will generate a simple page (no history)."
						},
						{
							"key": "as3.flash.generateHTML",
							"title": "Generate HTML wrapper file",
							"type": "bool",
							"default": true
						},
						{
							"key": "as3.flash.checkTarget",
							"title": "Check target player version",
							"type": "bool",
							"default": false
						},
						{
							"key": "as3.flash.express",
							"title": "Use Express Install",
							"type": "bool",
							"default": true
						},
						{
							"key": "as3.flash.navigation",
							"title": "Enable integration with browser navigation",
							"type": "bool",
							"default": true
						}
					]
				},
				{
					"title": "Compiler options",
					"type": "section",
					"children": [
						{
							"key": "as3.compiler.copy",
							"title": "Copy non-embedded files to output folder",
							"type": "bool",
							"default": true
						},
						{
							"key": "as3.compiler.generateAccessable",
							"title": "Generate accessible SWF file",
							"type": "bool",
							"default": false
						},
						{
							"key": "as3.compiler.strict",
							"title": "Enable strict type checking",
							"type": "bool",
							"default": true
						},
						{
							"key": "as3.compiler.enableWarnings",
							"title": "Enable warnings",
							"type": "bool",
							"default": true
						},
						{
							"key": "as3.compiler.additional",
							"title": "Additional compiler arguments",
							"type": "text"
						}
					]
				}
			]
		},
		{
			"title": "Modules",
			"type": "section",
			"description": "Specify the modules to build for this project (Not sure how to handle this, but it was in FB 4.6...)",
			"children": [
				{
					"key": "as3.modules.list",
					"title": "Modules",
					"type": "pathArray",
					"relative": true,
					"allowFolders": false,
					"allowFiles": true
				},
				{
					"key": "as3.modules.edit",
					"title": "Edit...",
					"type": "command"
				}
			]
		}
	],

	"commands": {
		"files": [
			{
				"title": "New ActionScript file",
				"command": "as3mxml.newActionScriptFile"
			}
		],
		"editor": [
			{
				"title": "Add Import",
				"subtitle": "You know you want to!",
				"command": "as3mxml.addImport",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Add MXML Namespace",
				"command": "as3mxml.addMXMLNamespace",
				"when": "(editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Organize Imports In Uri",
				"command": "as3mxml.organizeImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Organize Imports In Directory",
				"command": "as3mxml.organizeImportsInDirectory",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Add Missing Imports In Uri",
				"command": "as3mxml.addMissingImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Remove Unused Imports In Uri",
				"command": "as3mxml.removeUnusedImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Sort Imports In Directory",
				"command": "as3mxml.sortImportsInUri",
				"when": "as3mxmlCodeIntelligenceReady==true"
			},
			{
				"title": "Get Active Project URIs",
				"command": "as3mxml.getActiveProjectURIs",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Get Library Definition Text",
				"command": "as3mxml.getLibraryDefinitionText",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			}
		],
		"extensions": [
			{
				"title": "Restart AS3MXML LSP",
				"command": "as3.restart"
			},
			{"separator": true},
			{
				"title": "Export Release Build...",
				"command": "as3.exportRelease"
			},
			{
				"title": "Clear Certifcate Password",
				"command": "as3.clearExportPassword"
			},
			{"separator": true},
			{
				"title": "Test UI",
				"command": "as3.paneltest"
			},
			{"separator": true},
			{
				"title": "Import FlashBuilder settings",
				"command": "as3.importFlashBuilderSettings",
				"when": "hasProjectAndASProperties"

			},
			{"separator": true},
			{
				"title": "AIR / ActionScript 3 Reference",
				"command": "as3.as3reference"
			},
			{"separator": true},
			{
				"title": "AAA",
				"command": "as3.packaging.certificateCreate"
			},
			{
				"title": "AAA",
				"command": "as3.clearExportPassword"
			},
			{
				"title": "Tester",
				"command": "as3.tester"
			}
		]
	}
}
