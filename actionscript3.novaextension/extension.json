{
	"identifier": "com.abattoirsoftware.actionscript3",
	"name": "ActionScript 3",
	"organization": "",
	"description": "ActionScript 3 & MXML language extension for Panic Nova. LSP powered directly from Bowler Hat LLC's vscode-as3mxml. Develop apps for Adobe AIR, Adobe Flash Player, and maybe Apache Royale.",
	"version": "0.7.3",
	"keywords": ["actionscript 3","flash","air","adobe air","mxml" ],
	"categories": [
		"issues",
		"languages",
		"tasks",
		"clips",
		"completions"
	],
	"bugs-WHENDONE": "https://github.com/AmigaAbattoir/nova-actionscript3/issues",

	"main": "main.js",

	"entitlements": {
		"process": true,
		"filesystem": "readwrite"
	},

	"activationEvents": [
		"onLanguage:as",
		"onLanguage:as3",
		"onLanguage:actionscript",
		"onLanguage:actionscript3",
		"onLanguage:mxml",
		"onWorkspaceContains:**/asconfig.json",
		"onWorkspaceContains:**/asconfig.*.json",
		"onWorkspaceContains:.actionScriptProperties",
		"onWorkspaceContains:*.as3proj",
		"onView:actionScriptSourcePaths",
		"onCommand:as3mxml.organizeImportsInUri",
		"onCommand:as3mxml.organizeImportsInDirectory",
		"onCommand:as3mxml.removeUnusedImportsInUri",
		"onCommand:as3mxml.addMissingImportsInUri",
		"onCommand:as3mxml.sortImportsInUri",
		"onCommand:as3mxml.saveSessionPassword",
		"onCommand:as3mxml.selectWorkspaceSDK",
		"onCommand:as3mxml.getActiveProjectURIs",

		"onCommand:as3.packaging.certificateCreate"
	],

	"breakpoints": [
		{ "syntax": "actionscript3" },
		{ "syntax": "actionscript" },
		{ "syntax": "as" },
		{ "syntax": "mxml" }
	],

	"debugAdapters": {
		"actionscript": {
			"name": "SWF",
			"image": "ActionScript_icon.png"
		}
	},

	"taskTemplates": {
		"actionscript-flash": {
			"name": "Flash",
			"image": "as3-flash",
			"description": "Build and run a Flash or Flex project.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "flash" }
				}
			},
			"config": "Tasks/as3-flash.json"
		},
		"actionscript-air": {
			"name": "AIR",
			"image": "as3-air",
			"description": "Build and run AS3 or MXML project with AIR for desktops.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "air" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "air" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "air" }
				}
			},
			"config": "Tasks/as3-air.json"
		},
		"actionscript-android": {
			"name": "AIR - Android",
			"image": "as3-android",
			"description": "Build and run AS3 or MXML project with AIR for Android devices.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "android" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "android" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "android" }
				}			},
			"config": "Tasks/as3-android.json"
		},
		"actionscript-ios": {
			"name": "AIR - iOS",
			"image": "as3-ios",
			"description": "Build and run AS3 or MXML project with AIR for iOS devices.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "ios" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "ios" }
				},
				"run": {
					"resolve": "actionscript",
					"data": { "type": "airmobile", "os": "ios" }
				}
			},
			"config": "Tasks/as3-ios.json"
		},
		"actionscript-lib": {
			"name": "AS3 Library",
			"image": "as3-lib",
			"description": "Build an AS3 library.",
			"persistent": true,
			"tasks": {
				"build": {
					"resolve": "actionscript",
					"data": { "type": "library" }
				},
				"clean": {
					"resolve": "actionscript",
					"data": { "type": "library"}
				}
			},
			"config": "Tasks/as3-lib.json"
		}
	},

	"config": [
		{
			"title": "Java",
			"type": "section",
			"description": "Java is required for AS3MXML and other AIR tools like ADT and ADL.",
			"children": [
				{
					"key": "as3.java.path",
					"title": "Java Path",
					"type": "path",
					"placeholder": "/usr/bin/java",
					"description": "This setting may be used to specify the exact path to the java executable that the extension should use (Note: it must be an executable, and not directory)."
				}
			]
		},
		{
			"title": "SDKs",
			"type": "section",
			"description": "Here is where all setting for which AID SDKs to use",
			"children": [
				{
					"key": "as3.sdk.default",
					"title": "Default AIR SDK path",
					"allowFolders": true,
					"allowFiles": false,
					"type": "path",
					"default": "~/Applications/AIRSDK/",
					"description": "This is where the default Flex/AIR SDK will be. If empty, it will default to /Applications/AIRSDK."
				},
				{
					"key": "as3.sdk.searchPaths",
					"title": "SDK Search Paths",
					"allowFolders": true,
					"allowFiles": false,
					"type": "pathArray",
					"placeholder": "",
					"description": "(*NOTE Not implemented yet.*) Specifies a folder path containing one or more SDKs to add as custom options in the SDK picker."

				},
				{
					"key": "as3.sdk.animate",
					"title": "Adobe Animate executable",
					"type": "path",
					"placeholder": "",
					"description": "Specifies the absolute path of the Adobe Animate executable"
				},
				{
					"key": "as3.sdk.editor",
					"title": "Editor SDK path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"default": "~/Applications/AIRSDK/",
					"description": "(Advanced) Specifies the folder path of the Apache Royale SDK used internally by the extension to provide code intelligence features. Unless you know what you're doing, you should probably set `as3.sdk.framework` instead.\n\nIf you are working on a project that uses a nightly build of Apache Royale, you may be required to specify the `as3.sdk.editor` setting to avoid compiler errors. Sometimes, new versions of Royale add new compiler options that older versions of compiler may not recognize."
				},
				{
					"key": "as3.sdk.ios",
					"title": "iOS SDK path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"placeholder": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS##.#.sdk",
					"description": "For some ANEs in iOS, you will need to specify the iOS SDK to compile them. You can run from terminal `xcrun --sdk iphoneos --show-sdk-path` to get the paths. Or maybe someday I can make this \"resolve\" that as a drop down."
				},
				{
					"key": "as3.sdk.android",
					"title": "Android SDK path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"placeholder": "~/Library/Android/sdk/",
					"description": "Location of the Android SDK, default is `~/Library/Android/sdk/`"
				}
			]
		},
		{
			"title": "Language Server",
			"type": "section",
			"description": "This is where you can change some of the options for the AS3MXML language server",
			"children": [
				{
					"key": "as3.languageServer.path",
					"title": "Language Server Path",
					"type": "path",
					"allowFolders": true,
					"allowFiles": false,
					"placeholder": "Use built-in AS3MXML LSP",
					"description": "Path to the AS3MXML LSP, if blank, it will used the bundled LSP."
				},
				{
					"key": "as3.languageServer.jvmargs",
					"title": "JVM Args",
					"type": "string",
					"placeholder": "-Xms512m -Xmx1024m",
					"description": "(Advanced) Specifies extra arguments that asconfigc will pass to the Java virtual machine when launching the language server (code intelligence).\n\nThe following example customizes the Java memory heap size for the code intelligence: \"-Xms512m -Xmx1024m\""
				},
				{
					"key": "as3.languageServer.concurrentRequests",
					"title": "Concurrent Requests",
					"type": "boolean",
					"default": true,
					"description": "(Advanced) Specifies if requests to the language server will be processed concurrently or in a queue. Disabling concurrency will result in slower code intelligence, but it may be more stable if code intelligence stops working."
				}
			]
		},
		{
			"title": "File Exclusions",
			"type": "section",
			"description": "For all projects, these files will not be copied to the output folder after compilations.",
			"children": [
				{
					"key": "as3.fileExclusion.extensions",
					"title": "File Extensions",
					"type": "stringArray",
					"default": [ ".java",".class",".properties",".mxml",".as",".swc",".fxg"]
				},
				{
					"key": "as3.fileExclusion.names",
					"title": "File Names",
					"type": "stringArray",
					"default": [ ".DS_Store",".git",".svn",".classpath", "flex-config.xml","air-config.xml","services-config.xml","remoting-config.xml","proxy-config.xml","messaging-config.xml","data-management-config.xml" ]
				}
			]
		},
		{
			"title": "Flash Player Run/Debug",
			"type": "section",
			"children": [
				{
					"key": "as3.flashPlayer.standalone",
					"title": "Standalone Adobe Flash Player (debug version)",
					"type": "path",
					"default": "/Applications/Flash Player.app",
					"placeholder": "/Applications/Flash Player.app",
					"allowFolders": false,
					"allowFiles": true,
					"filetype": ".app",
					"description": "Location of debug version of Flash Player"
				},
				{
					"key": "as3.flashPlayer.ruffle",
					"title": "Ruffle",
					"type": "path",
					"placeholder": "/Applications/Ruffle.app",
					"default": "/Applications/Ruffle.app",
					"allowFolders": false,
					"allowFiles": true,
					"filetype": ".app",
					"description": "Location of Ruffle.app"
				},
				{
					"key": "as3.flashPlayer.browser",
					"title": "Browser with Flash Player",
					"type": "path",
					"allowFolders": false,
					"allowFiles": true,
					"filetype": ".app",
					"description": "A web browser to launch a Flash Player page in (probably an real old version of Chrome or something)"
				},
				{
					"key": "as3.flashPlayer.browserCustomUser",
					"title": "Use custom data folder for old Chrome",
					"type": "boolean",
					"default": true,
					"description": "Checking this will pass additional options, making an old version of Chrome or Chromium (prior to 88) use Flash, and a temp folder for user data"
				}

			]
		},
		{
			"title": "Additional Options",
			"type": "section",
			"children": [
				{
					"key": "as3.project.importFB",
					"title": "Prompt to import Flash Builder projects",
					"type": "boolean",
					"default": true,
					"description": "When specificed, this will ask if you want to import Flash Builder projects when opening a project. If disabled, or you cancel it, you can still do this manually form the menu."
				}
			]
		}
	],

	"configWorkspace": [
		{
			"title": "Application",
			"type": "section",
			"description": "Select the main ActionScript or MXML for the project",
			"children": [
				{
					"key": "as3.application.mainApp",
					"title": "Main application",
					"type": "path",
					"allowFolders": false,
					"allowFiles": true,
					"filetype": [ "as","mxml" ]
				}
			]
		},
		{
			"title": "ASConfig File",
			"type": "section",
			"description": "For AS3MXML, you need to have an `asconfig.json` file for code intelligence. Select if you want to have this extension auto generate, or if you will manually maintain it.",
			"children": [
				{
					"key": "as3.project.asconfigMode",
					"title": "asconfig.json Mode",
					"type": "enum",
					"values": [
						[ "automatic", "Automatically generate" ],
						[ "manual", "Manually maintain" ]
					]
				}
			]
		},
		{
			"title": "Build Packaging",
			"description": "Used for packaging AIR projects but not used in Flash projects.\n\nThese are the setting that will be used for building and running. Exporting release builds will default to these values, unless otherwise specified in the Task or if it is not supported for that type of Task",
			"type": "section",
			"children": [
				{
					"key": "as3.packaging.certificate",
					"title": "Certificate",
					"type": "path",
					"allowFolders": false,
					"allowFiles": true,
					"description": "Select the .p12 file to build your AIR app with"
				},
				{
					"key": "as3.packaging.timestamp",
					"title": "Timestamp",
					"type": "boolean",
					"description": "If you want to timestamp the packaging of your project, enable this. By unchecking it, it is the same as specifing \"none\" below for the Timestamp URL",
					"default": true
				},
				{
					"key": "as3.packaging.timestampUrl",
					"title": "Alternate Timestamp URL",
					"description": "You can specify \"none\" or a specific URL of an RFC3161-compliant timestamp server to time-stamp the digital signature. If no URL is specified, a default time-stamp server provided by Geotrust (https://timestamp.geotrust.com/tsa) is used. When the signature of an AIR application is time-stamped, the application can still be installed after the signing certificate expires, because the timestamp verifies that the certificate was valid at the time of signing.\n\nIf ADT cannot connect to the time-stamp server, then signing is canceled and no package is produced. Specify -tsa none to disable time-stamping. However, an AIR application packaged without a timestamp ceases to be installable after the signing certificate expires.",
					"type": "string"
				},
				{
					"key": "as3.packaging.excludedFiles",
					"title": "Files to exclude when packaging",
					"description": "When packaging, these files will not be included. These can also be specified in the Task",
					"type": "pathArray",
					"relative": true,
					"allowFolders": true,
					"allowFiles": true
				}
			]
		},
		{
			"title": "Build Path",
			"type": "section",
			"description": "Set the source path and library path, as well as the output location for debug running",
			"children": [
				{
					"key": "as3.build.source.main",
					"title": "Main source folder",
					"type": "path",
					"relative": true,
					"allowFolders": true,
					"allowFiles": false,
					"default": "src",
					"description": "The location of your main file. Use \"./\" if you want it at the root, otherwise it defaults to \"src\""
				},
				{
					"key": "as3.build.output",
					"title": "Output folder",
					"type": "path",
					"relative": true,
					"allowFolders": true,
					"allowFiles": false,
					"default": "bin-debug",
					"description": "The location of where the final files get built. Use \"./\" if you want it at the root, otherwise it defaults to \"bin-debug\""
				},
				{
					"key": "as3.build.outputURL",
					"title": "Output folder URL",
					"type": "string",
					"description": "* Note: Flash only\nThe location of where the final files get built. Use \"./\" if you want it at the root, otherwise it defaults to \"bin-debug\""
				},
				{
					"title": "Source Path",
					"type": "section",
					"description": "Additional source folders outside of the main source folder",
					"children": [
						{
							"key": "as3.build.source.additional",
							"title": "Additional source path",
							"type": "pathArray",
							"relative": true,
							"allowFolders": true,
							"allowFiles": false
						}
					]
				},
				{
					"title": "Library Path",
					"type": "section",
					"description": "Additonal library folders to use when building. The Library Task can be used to set additional options for the library.",
					"children": [
						{
							"key": "as3.build.componentSet",
							"title": "Component set:",
							"type":  "enum",
							"radio": true,
							"description": "When building a library, setting these will add the frameworks necessary for including the components necessary. Unlike Flash Builder, it will not list which onese are added. If you only want certain libraries, you can select `none` and manually add them below.",
							"values": [
								[ "both" , "MX + Spark" ],
								[ "spark" ,"Spark only"],
								[ "mx" ,"MX only"],
								[ "mobile" ,"Mobile"],
								[ "none" ,"None"]
							],
							"default": "both"
						},
						{
							"key": "as3.build.linkage",
							"title": "Framework linkage",
							"type":  "enum",
							"radio": false,
							"values": [
								[ "external" , "External (Use default)" ],
								[ "merged" ,"Merged into code"]
							],
							"default": "merged"
						},
						{
							"key": "as3.build.library.additional",
							"title": "Build path libraries",
							"description": "You can choose to add either individual SWCs or folders of SWCs",
							"type": "pathArray",
							"relative": true,
							"allowFolders": true,
							"allowFiles": true
						},
						{
							"type": "separator"
						},
						{
							"key": "as3.build.verifyRSL",
							"title": "Verify RSL digests (recommended for production)",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.removeRSL",
							"title": "Remove unused RSLs",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.localDebugRuntime",
							"title": "Use local debug runtime shared libraries when debugging",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.build.autoOrder",
							"title": "Automatically determine library ordering based on dependencies",
							"type": "boolean",
							"default": true
						}
					]
				},
				{
					"title": "Native Extensions",
					"type": "section",
					"description": "For AIR projects: ActionScript Native Extensions (ANE) allow you to incorporate native platform capabilities into your applications and use them like standard libraries",
					"children": [
						{
							"key": "as3.build.anes",
							"title": "Native extensions",
							"type": "pathArray",
							"relative": true,
							"allowFolders": false,
							"allowFiles": true
						}
					]
				}
			]
		},
		{
			"title": "Compiler",
			"type": "section",
			"description": "Selects options for compiling, like which SDK to use as well as other options when building for AIR and Flash projects.",
			"children": [
				{
					"title": "AIR/Flex SDK version",
					"type": "section",
					"children": [
						{
							"key": "as3.compiler.useDefault",
							"title": "Use the default SDK",
							"type": "enum",
							"values": [ "Use default SDK","Use a specific SDK"],
							"default": "Use default SDK",
							"description": "Specifies the folder path of the ActionScript SDK used by the current workspace. Supports the Adobe AIR SDK & Compiler, Apache Royale, the classic Apache Flex or Adobe Flex SDKs."
						},
						{
							"key": "as3.compiler.specificSdk",
							"title": "Use a specific SDK",
							"type": "path",
							"allowFolders": true,
							"allowFiles": false,
							"placeholder": "If empty, defaults the one specified in the extention's preferences"
						}
					]
				},
				{
					"title": "Compiler options",
					"type": "section",
					"children": [
						{
							"key": "as3.compiler.copy",
							"title": "Copy non-embedded files to output folder",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.compiler.generateAccessable",
							"title": "Generate accessible SWF file",
							"type": "boolean",
							"default": false
						},
						{
							"key": "as3.compiler.strict",
							"title": "Enable strict type checking",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.compiler.enableWarnings",
							"title": "Enable warnings",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.compiler.additional",
							"title": "Additional compiler arguments",
							"type": "text"
						}
					]
				},
				{
					"title": "Adobe Flash Player options",
					"description": "Settings for Flash only projects. These are ignored for AIR projects.",
					"type": "section",
					"children": [
						{
							"key": "as3.flash.options",
							"title": "Use the default SDK",
							"type": "enum",
							"values": [
								[ "sdk" , "Use minimum version required by the Flex SDK" ],
								[ "specified" ,"Use the specified version below"]
							],
							"default": "sdk",
							"description": "Specifies the minimum version of Adobe Flash Player. If using a specified version, please use the numbers below."
						},
						{
							"key": "as3.flash.minimum.major",
							"title": "Major",
							"type": "number",
							"default": 11,
							"min": 0,
							"max": 100
						},
						{
							"key": "as3.flash.minimum.minor",
							"title": "Minor",
							"type": "number",
							"default": 1,
							"min": 1,
							"max": 100
						},
						{
							"key": "as3.flash.minimum.revision",
							"title": "Revision",
							"type": "number",
							"default": 0,
							"min": 0,
							"max": 100
						}
					]
				},
				{
					"title": "Adobe Flash Player HTML wrapper",
					"type": "section",
					"description": "Settings for Flash only projects. These are ignored for AIR projects.\n⚠️ WARNING: If you change any of these options for the HTML wrapper, all files in the `htmi-template` folder of your project will be overwritten and/or deleted!",
					"children": [
						{
							"key": "as3.flash.generateHTML",
							"title": "Generate HTML wrapper file",
							"type": "boolean",
							"default": true
						},
						{
							"key": "as3.flash.generatorType",
							"title": "Which type of HTML to generate",
							"type": "enum",
							"values": [ "Classic", "Ruffle" ],
							"default": "Classic",
							"description": "Specifies which type of wrapper to generate for the project.\nClassic will use the default in the SDK.\nRuffle will supply a version that will generate a simple page (no history and the other options below are not used). Also, you will need to preview the page in Nova to run it. "
						},
						{
							"key": "as3.flash.checkTarget",
							"title": "Check target player version",
							"type": "boolean",
							"default": false
						},
						{
							"key": "as3.flash.express",
							"title": "Use Express Install",
							"type": "boolean",
							"description": "If check target is not checked, this will also remove the installer SWF",
							"default": true
						},
						{
							"key": "as3.flash.navigation",
							"title": "Enable integration with browser navigation",
							"type": "boolean",
							"default": true
						}
					]
				}
			]
		},
		{
			"title": "Modules",
			"type": "section",
			"description": "Specify the modules to build for this project. (NOTE: Not sure how to handle this, but it was in FB 4.6)",
			"children": [
				{
					"key": "as3.modules.list",
					"title": "Modules",
					"type": "pathArray",
					"relative": true,
					"allowFolders": false,
					"allowFiles": true
				}
			]
		},
		{
			"title": "Themes",
			"type": "section",
			"description": "(Incomplete) For now, a flag to specify using Halo in Flex 4 projects.",
			"children": [
				{
					"key": "as3.themes.forceHalo",
					"title": "Force Halo",
					"type": "boolean",
					"description": "Enable this if you are trying to compile a Flex 3 project with an Flex 4 SDK. If building fails with the following types of errors, try to enable this option:\n\nError: The style '…' is only supported by type 'mx.….…' with the theme(s) 'halo'.",
					"default": false
				}
			]
		}
	],

	"commands": {
		"files": [
			{
				"title": "New ActionScript file",
				"command": "as3mxml.newActionScriptFile"
			}
		],
		"editor": [
			{
				"title": "Add Import",
				"subtitle": "You know you want to!",
				"command": "as3mxml.addImport",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Add MXML Namespace",
				"command": "as3mxml.addMXMLNamespace",
				"when": "(editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Organize Imports In Uri",
				"command": "as3mxml.organizeImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Organize Imports In Directory",
				"command": "as3mxml.organizeImportsInDirectory",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Add Missing Imports In Uri",
				"command": "as3mxml.addMissingImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Remove Unused Imports In Uri",
				"command": "as3mxml.removeUnusedImportsInUri",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Sort Imports In Directory",
				"command": "as3mxml.sortImportsInUri",
				"when": "as3mxmlCodeIntelligenceReady==true"
			},
			{
				"title": "Get Active Project URIs",
				"command": "as3mxml.getActiveProjectURIs",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			},
			{
				"title": "Get Library Definition Text",
				"command": "as3mxml.getLibraryDefinitionText",
				"when": "(editorSyntax == 'actionscript' || editorSyntax == 'mxml') && as3mxmlCodeIntelligenceReady"
			}
		],
		"extensions": [
			{
				"title": " ↺  Restart AS3MXML LSP",
				"command": "as3.restart"
			},
			{"separator": true},
			{
				"title": "📦 Export Release Build...",
				"command": "as3.exportRelease"
			},
			{"separator": true},
			{
				"title": "⚙️ Import FlashBuilder settings",
				"command": "as3.importFlashBuilderSettings",
				"when": "hasProjectAndASProperties"
			},
			{
				"title": "📝 Force update to asconfig.json file",
				"command": "as3.update.asconfig"
			},
			{"separator": true},
			{
				"title": "📕 AIR / ActionScript 3 Reference",
				"command": "as3.as3reference"
			},
			{
				"title": "📖 Adobe AIR - Help at Adobe",
				"command": "as3.as3reference.old"
			},
			{"separator": true},
			{
				"title": "🔓 Clear Certificate Password",
				"command": "as3.clearExportPassword"
			},
			{
				"title": "🔐 Store Certificate Password",
				"command": "as3.storeExportPassword"
			},
			{
				"title": "🔏 Create new Certificate",
				"command": "as3.packaging.certificateCreate"
			},
			{"separator": true},
			{
				"title": "📱 Device Tester",
				"command": "as3.devicetester"
			},
			{"separator": true},
			{
				"title": "      Test UI",
				"command": "as3.paneltest"
			},
			{
				"title": "      Test Task",
				"command": "as3.testtask"
			},
			{
				"title": "      PASSWORD Tester",
				"command": "as3.password.tester"
			}
		]
	}
}
